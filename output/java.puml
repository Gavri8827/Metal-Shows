' Generated by UML Generator
' Encoded: jLXVRzis47_Nf-2Zl2N5detCg9siY84kBUoz3KF0I8nDH1Oraexd5jrd7qb95Ez4oMxglHZcyOwyFx-xu-czqbJg_Qv8r0ilAohfZcG5LMgkjUHFUysMcIZN_0iZloHRdZEISPaLB4aS5rdGx8ML-UzCqsAz5GSrhwg2PrHpKPAl2I4_VpKtQ9vz8plAovJAZPgIjJcxtFpvrsHANWNFas_jSVUqA6v5gQKe2YRT0TTRGrip-SepDdKCpSBkNTiRe50wn3-nl1kcvqLXgIerjw-OgaIfs6-bvlfuyv4hVMCtPxE6sIvIda_9ijHimsHVnh5RxamogfaJi2hKTm_nUulDhb7F-GiRBhijRy-gH-jnKhrYbL1S2tb40k6MTrzKW_Iyow_8MwuE8X7m30OauBdxuvCFJK0UZr3060Gg59VixprJsfmEj5vvykb3eK9gSRJPa2hpinpJ3Hiu2w1XdOOneGpDnsFTBNmqeL0wn1-4m5BLilJ0FQslbV1Xi8l5ySuK06vo2XrWy24E3_jTGCYsbCkGrB_4dH_umJYnvmT3w-pg5ct1275u3zO_d2zGdNH8aoiohiSFfuuhjqCvuvIaClS9KuFUWJBNejOq2coxuMDhsKTponrJnzvUPUKCv6IshRLxecNUbllQ8G0ShldS6RscvAF8Q67_NX7JJn1jnCXPUwTM7uGyJs67UATkh0ntMLz3hPBSRB07kcEjAPRyJ7UyE6AgQN95k3OnHhQqw0qSqIQswOm-lpejK4N0whK9najjbrrwMGB88IzYhuzeXS9ZIQPnlp3zMJfm1tGRLsnwnJEzbnq9DFMkbQCRB0cVb8czIQyZ89dOXMkb9MCQUDhWBImhtgcVcLo90pHBsETAxV6GtMAsZO755lcLbEn0vbBIewFEqaaKCxs6pQ6L_nE6wZIELBJM2bH7pZV8SjT68Kk2Yq2PQjrTTna8sQvreU2ZvW3nYq1Irq-8w0xEwE0OFWTGFmHn3EUU6YQ_c7oc6KE5tIW5Ta5f2PW8-VUPb_dYkAhZc_RZFEc7STR9MGyyhftnaOT6Nt18AzXXa6Ojq-FttLQtyEX1gp1BmdVcEIS26uOLjn5vl7VL9lAcwHunKObvcQySCCsVsmQERtpOVAgiwhIuYMbld1ZNVj6WrxuopD1aqBVSb4AoMwfOYg4z2GlMzta0IgoR_5WmVM2iJ5rpneqv0av_JDtuFnJi7_vKi0ls_k0Qq5IQbrPRV2iHU-lv4R7XJcECiTcm6mQ3MR1zvy8tXYi9Xedc-GCxz4T0MBdwOrIlVGoy1Q5b2W1eYW3Lbbp0qNlHNcfox9nxlWq60wCMcFrH_Iy-VCPgBHhiul67VR21mHi6J7y8Q9y09AT3wiV0DYRZ8iuVNSquNJ3F6Xjx4fSO4ztBmhxswIkp_zFkmO5sM_rI_AoUGTt0QmBw-MHo-M7G-tbKP1BCLCR9443DCmvFTg2-Dh3otnLgAIWSZ6C3D-3fR5bMUttnCctSOnhMZXRyY_5BqAgwsG1zwllf-Xfyt4FRxzxDwYeQ_rvcfIEVniva1XaKbx7tHnCtGLzfxE7XTndqyS9j1vyh8jkeXKKuXfL7p5RhPl9BuXEkQDGD37BZccZq3CMyye0e-WebU910IaVtdQ1VkLYx9xvVXHq_ugTmEuQMK3JUKWUOKUOFSGsYQE3Yqm88SsUm85YEw1TkEvGuxmT5C69vkDqYAtblIi5-L_m7
' URL: http://www.plantuml.com/plantuml/uml/jLXVRzis47_Nf-2Zl2N5detCg9siY84kBUoz3KF0I8nDH1Oraexd5jrd7qb95Ez4oMxglHZcyOwyFx-xu-czqbJg_Qv8r0ilAohfZcG5LMgkjUHFUysMcIZN_0iZloHRdZEISPaLB4aS5rdGx8ML-UzCqsAz5GSrhwg2PrHpKPAl2I4_VpKtQ9vz8plAovJAZPgIjJcxtFpvrsHANWNFas_jSVUqA6v5gQKe2YRT0TTRGrip-SepDdKCpSBkNTiRe50wn3-nl1kcvqLXgIerjw-OgaIfs6-bvlfuyv4hVMCtPxE6sIvIda_9ijHimsHVnh5RxamogfaJi2hKTm_nUulDhb7F-GiRBhijRy-gH-jnKhrYbL1S2tb40k6MTrzKW_Iyow_8MwuE8X7m30OauBdxuvCFJK0UZr3060Gg59VixprJsfmEj5vvykb3eK9gSRJPa2hpinpJ3Hiu2w1XdOOneGpDnsFTBNmqeL0wn1-4m5BLilJ0FQslbV1Xi8l5ySuK06vo2XrWy24E3_jTGCYsbCkGrB_4dH_umJYnvmT3w-pg5ct1275u3zO_d2zGdNH8aoiohiSFfuuhjqCvuvIaClS9KuFUWJBNejOq2coxuMDhsKTponrJnzvUPUKCv6IshRLxecNUbllQ8G0ShldS6RscvAF8Q67_NX7JJn1jnCXPUwTM7uGyJs67UATkh0ntMLz3hPBSRB07kcEjAPRyJ7UyE6AgQN95k3OnHhQqw0qSqIQswOm-lpejK4N0whK9najjbrrwMGB88IzYhuzeXS9ZIQPnlp3zMJfm1tGRLsnwnJEzbnq9DFMkbQCRB0cVb8czIQyZ89dOXMkb9MCQUDhWBImhtgcVcLo90pHBsETAxV6GtMAsZO755lcLbEn0vbBIewFEqaaKCxs6pQ6L_nE6wZIELBJM2bH7pZV8SjT68Kk2Yq2PQjrTTna8sQvreU2ZvW3nYq1Irq-8w0xEwE0OFWTGFmHn3EUU6YQ_c7oc6KE5tIW5Ta5f2PW8-VUPb_dYkAhZc_RZFEc7STR9MGyyhftnaOT6Nt18AzXXa6Ojq-FttLQtyEX1gp1BmdVcEIS26uOLjn5vl7VL9lAcwHunKObvcQySCCsVsmQERtpOVAgiwhIuYMbld1ZNVj6WrxuopD1aqBVSb4AoMwfOYg4z2GlMzta0IgoR_5WmVM2iJ5rpneqv0av_JDtuFnJi7_vKi0ls_k0Qq5IQbrPRV2iHU-lv4R7XJcECiTcm6mQ3MR1zvy8tXYi9Xedc-GCxz4T0MBdwOrIlVGoy1Q5b2W1eYW3Lbbp0qNlHNcfox9nxlWq60wCMcFrH_Iy-VCPgBHhiul67VR21mHi6J7y8Q9y09AT3wiV0DYRZ8iuVNSquNJ3F6Xjx4fSO4ztBmhxswIkp_zFkmO5sM_rI_AoUGTt0QmBw-MHo-M7G-tbKP1BCLCR9443DCmvFTg2-Dh3otnLgAIWSZ6C3D-3fR5bMUttnCctSOnhMZXRyY_5BqAgwsG1zwllf-Xfyt4FRxzxDwYeQ_rvcfIEVniva1XaKbx7tHnCtGLzfxE7XTndqyS9j1vyh8jkeXKKuXfL7p5RhPl9BuXEkQDGD37BZccZq3CMyye0e-WebU910IaVtdQ1VkLYx9xvVXHq_ugTmEuQMK3JUKWUOKUOFSGsYQE3Yqm88SsUm85YEw1TkEvGuxmT5C69vkDqYAtblIi5-L_m7
' Generated on: 2025-10-13T00:31:58.029301500

@startuml
skinparam classAttributeIconSize 0
hide circle

class BackendMetalShowsApplication {
  +{static} main(args: String[]): void
}

class HallController {
  -hallService: HallService
  --
  +HallController(hallService: HallService)
  +getAllHalls(): ResponseEntity<List<Hall>>
  +getHall(id: Integer): ResponseEntity<Hall>
  +createHall(hall: Hall): ResponseEntity<Hall>
}

class ReservationController {
  -reservationService: ReservationService
  -reservationSeatRepository: ReservationSeatRepository
  --
  +ReservationController(reservationService: ReservationService, reservationSeatRepository: ReservationSeatRepository)
  +getAllReservations(): ResponseEntity<List<ReservationDTO>>
  +getReservation(id: Integer): ResponseEntity<Reservation>
  +createReservation(requestDTO: ReservationRequestDTO): ResponseEntity<Reservation>
  +getReservationsByShow(showId: Integer): ResponseEntity<List<Reservation>>
}

class SeatController {
  -seatService: SeatService
  --
  +SeatController(seatService: SeatService)
  +getAllSeatsInHall(hallId: Integer): ResponseEntity<List<Seat>>
  +getSeatByDetails(hallId: Integer, rowNum: Integer, chairNum: Integer): ResponseEntity<Seat>
}

class ShowController {
  -showService: ShowService
  -hallRepository: HallRepository
  -reservationSeatRepository: ReservationSeatRepository
  --
  +ShowController(showService: ShowService, hallRepository: HallRepository, reservationSeatRepository: ReservationSeatRepository)
  +getAllShows(): ResponseEntity<List<ShowCardDTO>>
  +createShow(dto: ShowDTO): ResponseEntity<Show>
  +getShow(id: Integer): ResponseEntity<ShowDetailsDTO>
  +searchShows(band: String, hallId: Integer, startDate: LocalDate, endDate: LocalDate): ResponseEntity<List<Show>>
  +seatsForShow(id: Integer): ResponseEntity<ShowSeatsDTO>
}

class ReservationRequestDTO {
  -privateName: String
  -familyName: String
  -mail: String
  -resDate: LocalDate
  -showId: Integer
  -seats: List<SeatRequestDTO>
}

class SeatRequestDTO {
  -rowNum: int
  -chairNum: int
}

class ShowDTO {
  -showDate: LocalDate
  -hallId: Integer
  -ticketPrice: Integer
  -bandName: String
  -picture: String
}

class Hall {
  -hallId: Integer
  -hallName: String
  -country: String
  -city: String
  -street: String
  -rowsNum: Integer
  -seatsPerRow: Integer
  -totalSeats: Integer
  -shows: List<Show> = new ArrayList<>()
}

class Reservation {
  -reservationid: Integer
  -privateName: String
  -familyName: String
  -mail: String
  -resDate: LocalDate
  -show: Show
  -reservationSeats: List<ReservationSeat> = new ArrayList<>()
}

class ReservationSeat {
  -id: Integer
  -reservation: Reservation
  -seat: Seat
}

class Seat {
  -seatId: Integer
  -rowNum: Integer
  -chairNum: Integer
  -hall: Hall
}

class Show {
  -showId: Integer
  -bandName: String
  -showDate: LocalDate
  -ticketPrice: Integer
  -picture: String
  -hall: Hall
}

interface HallRepository {
}

interface ReservationRepository {
  ~findByResDate(resDate: LocalDate): List<Reservation>
  ~findByShow_ShowId(showId: Integer): List<Reservation>
}

interface ReservationSeatRepository {
  ~findByReservation_Show_ShowId(showId: Integer): List<ReservationSeat>
  ~findByReservation_Reservationid(reservationId: Integer): List<ReservationSeat>
}

interface SeatRepository {
  ~findByHall_HallId(hallId: Integer): List<Seat>
  ~findByHall_HallIdAndRowNumAndChairNum(hallId: Integer, rowNum: Integer, chairNum: Integer): Optional<Seat>
}

interface ShowRepository {
  ~findByBandNameContainingIgnoreCase(bandName: String): List<Show>
  ~findByHall_HallId(hallId: Integer): List<Show>
  ~findByShowDateBetween(start: LocalDate, end: LocalDate): List<Show>
  ~searchFlexible(band: String, hallId: Integer, startDate: LocalDate, endDate: LocalDate): List<Show>
}

class HallService {
  -repo: HallRepository
  --
  +HallService(repo: HallRepository)
  +getAllHalls(): List<Hall>
  +getHallDetails(id: Integer): Hall
  +addNewHall(hall: Hall): Hall
}

class ReservationService {
  -reservationRepository: ReservationRepository
  -showRepository: ShowRepository
  -seatRepository: SeatRepository
  -reservationSeatRepository: ReservationSeatRepository
  --
  +ReservationService(reservationRepository: ReservationRepository, showRepository: ShowRepository, seatRepository: SeatRepository, reservationSeatRepository: ReservationSeatRepository)
  +getAllReservations(): List<Reservation>
  +getReservationDetails(id: Integer): Reservation
  +addNewReservation(requestDTO: ReservationRequestDTO): Reservation
}

class SeatService {
  -seatRepository: SeatRepository
  --
  +SeatService(seatRepository: SeatRepository)
  +findByHallId(hallId: Integer): List<Seat>
  +getAllSeatsInHall(hallId: Integer): List<Seat>
  +getSeatByDetails(hallId: Integer, rowNum: Integer, chairNum: Integer): Seat
  +saveSeat(seat: Seat): Seat
  +saveAllSeats(seats: List<Seat>): List<Seat>
}

class ShowService {
  -showRepository: ShowRepository
  --
  +ShowService(showRepository: ShowRepository)
  +getShowId(id: Integer): Show
  +getAllShows(): List<Show>
  +addNewShow(show: Show): Show
  +getShowDetails(id: Integer): Show
  +searchShows(bandInput: String, hallId: Integer, startDate: LocalDate, endDate: LocalDate): List<Show>
  -normalize(s: String): String
}

HallController *-- HallService
HallController ..> Hall
ReservationController *-- ReservationService
ReservationController *-- ReservationSeatRepository
ReservationController ..> ReservationRequestDTO
SeatController *-- SeatService
ShowController *-- ShowService
ShowController *-- HallRepository
ShowController *-- ReservationSeatRepository
ShowController ..> ShowDTO
ReservationRequestDTO o-- SeatRequestDTO
Hall o-- Show
Reservation *-- Show
Reservation o-- ReservationSeat
ReservationSeat *-- Reservation
ReservationSeat *-- Seat
Seat *-- Hall
Show *-- Hall
HallService *-- HallRepository
HallService ..> Hall
ReservationService *-- ReservationRepository
ReservationService *-- ShowRepository
ReservationService *-- SeatRepository
ReservationService *-- ReservationSeatRepository
ReservationService ..> Reservation
ReservationService ..> ReservationRequestDTO
SeatService *-- SeatRepository
SeatService ..> Seat
ShowService *-- ShowRepository
ShowService ..> Show
@enduml