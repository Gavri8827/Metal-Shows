{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gavri\\\\Desktop\\\\My Projects\\\\full-metal-shows\\\\frontend\\\\src\\\\pages\\\\AddNewShow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AddNewShow.css';\nimport Modal from '../components/Modal';\nimport SingleDateBox from \"../components/SingleDateBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNewShow() {\n  _s();\n  const [form, setForm] = useState({\n    showDate: '',\n    hallId: '',\n    ticketPrice: '',\n    bandName: '',\n    picture: ''\n  });\n  const [message, setMessage] = useState('');\n  const [halls, setHalls] = useState([]);\n  useEffect(() => {\n    fetch('/api/halls').then(res => res.json()).then(data => {\n      console.log(\"Fetched halls:\", data);\n      setHalls(data);\n    }).catch(err => console.error('Failed to fetch halls:', err));\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(\"Changed:\", name, value);\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formattedDate = form.showDate ? form.showDate.toISOString().split(\"T\")[0] : null;\n    const showData = {\n      ...form,\n      showDate: formattedDate,\n      hallId: form.hallId === \"\" ? null : parseInt(form.hallId),\n      ticketPrice: form.ticketPrice === \"\" ? null : parseInt(form.ticketPrice)\n    };\n    console.log(\"Submitting:\", showData);\n    try {\n      const res = await fetch('/api/shows', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(showData)\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.message || 'Failed to save show');\n      }\n      setMessage('Show added successfully!');\n      setForm({\n        showDate: '',\n        hallId: '',\n        ticketPrice: '',\n        bandName: '',\n        picture: ''\n      });\n    } catch (err) {\n      console.error(err);\n      setMessage('Error adding show');\n    }\n  };\n  const fields = [{\n    label: 'Hall',\n    name: 'hallId',\n    type: 'select',\n    options: halls\n  }, {\n    label: 'Ticket Price (₪)',\n    name: 'ticketPrice',\n    type: 'number'\n  }, {\n    label: 'Band Name',\n    name: 'bandName',\n    type: 'text'\n  }, {\n    label: 'Picture URL',\n    name: 'picture',\n    type: 'text'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-show-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-show-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(SingleDateBox, {\n        selectedDate: form.showDate,\n        setSelectedDate: date => setForm(prev => ({\n          ...prev,\n          showDate: date\n        })),\n        label: \"Show Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }, this), fields.map(({\n        label,\n        name,\n        type,\n        options\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: name,\n          children: [label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }, this), type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n          id: name,\n          name: name,\n          value: form[name],\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.hallId,\n            children: [option.hallName, \" (\", option.city, \")\"]\n          }, option.hallId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          id: name,\n          name: name,\n          value: form[name],\n          onChange: handleChange,\n          required: true,\n          ...(type === \"number\" ? {\n            min: 0,\n            onKeyDown: e => e.key === '-' && e.preventDefault()\n          } : {})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        message: message,\n        onClose: () => setMessage('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewShow, \"c+lJsz9Q0RopaBXYtpnI5lMkos4=\");\n_c = AddNewShow;\nvar _c;\n$RefreshReg$(_c, \"AddNewShow\");","map":{"version":3,"names":["React","useState","useEffect","Modal","SingleDateBox","jsxDEV","_jsxDEV","AddNewShow","_s","form","setForm","showDate","hallId","ticketPrice","bandName","picture","message","setMessage","halls","setHalls","fetch","then","res","json","data","console","log","catch","err","error","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","formattedDate","toISOString","split","showData","parseInt","method","headers","body","JSON","stringify","ok","Error","fields","label","type","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","selectedDate","setSelectedDate","date","map","htmlFor","id","onChange","required","option","hallName","city","min","onKeyDown","key","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gavri/Desktop/My Projects/full-metal-shows/frontend/src/pages/AddNewShow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/AddNewShow.css';\r\nimport Modal from '../components/Modal';\r\nimport SingleDateBox from  \"../components/SingleDateBox\";\r\n\r\n\r\nexport default function AddNewShow() {\r\n  const [form, setForm] = useState({\r\n    showDate: '',\r\n    hallId: '',\r\n    ticketPrice: '',\r\n    bandName: '',\r\n    picture: ''\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [halls, setHalls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/halls')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(\"Fetched halls:\", data);\r\n        setHalls(data);\r\n      })\r\n      .catch(err => console.error('Failed to fetch halls:', err));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    console.log(\"Changed:\", name, value);\r\n    setForm(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const formattedDate = form.showDate \r\n  ? form.showDate.toISOString().split(\"T\")[0] \r\n  : null;\r\n\r\n\r\n    const showData = {\r\n      ...form,\r\n      showDate: formattedDate,\r\n      hallId: form.hallId === \"\" ? null : parseInt(form.hallId),\r\n      ticketPrice: form.ticketPrice === \"\" ? null : parseInt(form.ticketPrice)\r\n    };\r\n\r\n    console.log(\"Submitting:\", showData);\r\n\r\n    try {\r\n      const res = await fetch('/api/shows', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(showData),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        throw new Error(data.message || 'Failed to save show');\r\n      }\r\n\r\n      setMessage('Show added successfully!');\r\n      setForm({\r\n        showDate: '',\r\n        hallId: '',\r\n        ticketPrice: '',\r\n        bandName: '',\r\n        picture: ''\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('Error adding show');\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n  \r\n    { label: 'Hall', name: 'hallId', type: 'select', options: halls },\r\n    { label: 'Ticket Price (₪)', name: 'ticketPrice', type: 'number' },\r\n    { label: 'Band Name', name: 'bandName', type: 'text' },\r\n    { label: 'Picture URL', name: 'picture', type: 'text' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"add-show-container\">\r\n      <h1>Add New Show</h1>\r\n      <form className=\"add-show-form\" onSubmit={handleSubmit}>\r\n  {/* Show Date - תיבת בחירת תאריך מיוחדת */}\r\n  <SingleDateBox\r\n    selectedDate={form.showDate}\r\n    setSelectedDate={(date) => setForm(prev => ({ ...prev, showDate: date }))}\r\n    label=\"Show Date\"\r\n  />\r\n\r\n  {/* שאר השדות */}\r\n  {fields.map(({ label, name, type, options }) => (\r\n  <div key={name}>\r\n    <label htmlFor={name}>{label}:</label>\r\n    \r\n    {type === 'select' ? (\r\n      <select\r\n        id={name}\r\n        name={name}\r\n        value={form[name]}\r\n        onChange={handleChange}\r\n        required\r\n      >\r\n        <option value=\"\">Select</option>\r\n        {options.map(option => (\r\n          <option key={option.hallId} value={option.hallId}>\r\n            {option.hallName} ({option.city})\r\n          </option>\r\n        ))}\r\n      </select>\r\n    ) : (\r\n      <input\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        value={form[name]}\r\n        onChange={handleChange}\r\n        required\r\n        {...(type === \"number\" ? { min: 0, onKeyDown: (e) => e.key === '-' && e.preventDefault() } : {})}\r\n      />\r\n    )}\r\n  </div>\r\n))}\r\n\r\n        <button type=\"submit\">Add Show</button>\r\n        <Modal message={message} onClose={() => setMessage('')} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}